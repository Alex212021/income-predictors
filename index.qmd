---
title: "Predicting Income"
execute: 
  echo: false
  warning: false
---

**A person's income is determined by many factors, but which are the best predictors?**

To answer our question, we used the data from the General Social Survey. We modeled income, a continuous outcome variable, as a linear function of education (in years completed), race, sex and intelligence (as proxied by the "wordsum" test). As the coefficient plot below shows, individuals with higher incomes tend to be male, more educated, White and with higher "wordsum" scores. 

```{r}
# Load necessary packages

#| label: setup
#| message: FALSE
library(gssr)
library(brms)
library(tidybayes)
library(gtsummary)
library(tidyverse)
library(haven)
library(scales)
```

```{r}
#| label: cleaning
#| message: FALSE 

# Selecting the relevant columns and filtering out missing data

data(gss_all)

data_gss <- gss_all |>
  filter(year %in% c(2010, 2012, 2014, 2016, 2018, 2022)) |>
  select(conrinc, wordsum, race, educ, sex) |> 
  mutate(
    conrinc = as.numeric(conrinc),
    wordsum = as.numeric(wordsum),
    race = as_factor(race),
    educ = as.numeric(educ),
    sex = as_factor(sex)) |>
  drop_na()
```



```{r}
#| label: model
#| cache: true


# Fit the Bayesian linear regression model


model <- brm(conrinc ~ wordsum + race + educ + sex, 
             data = data_gss, 
             family = gaussian(),
             silent = 2,
             refresh = 0,
             seed = 123)

```



```{r}
#| label: coefficients-plot
#| message: FALSE


# Extract posterior samples for model coefficients
posterior_samples <- model %>%
  spread_draws(b_Intercept, b_wordsum, b_raceblack, b_raceother, b_educ, b_sexfemale)

# Convert to data frame for plotting
df_coefficients <- posterior_samples %>%
  gather(key = "term", value = "estimate", b_wordsum, b_raceblack, b_raceother, b_educ, b_sexfemale) %>%
  mutate(term = factor(term, levels = c("b_wordsum", "b_raceblack", "b_raceother", "b_educ", "b_sexfemale")))

# Coefficient plot
ggplot(df_coefficients, aes(x = term, y = estimate, fill = term)) +
  geom_violin(trim = FALSE) +
  geom_point(data = df_coefficients %>% group_by(term) %>% summarize(estimate = mean(estimate)), 
             shape = 21, size = 3, color = "white", fill = "red", stroke = 1.5) +
  coord_flip() +
  labs(title = "Posterior Distributions of Model Coefficients",
       x = "Coefficients",
       y = "Estimate",
       fill = "Coefficient") +
  theme_minimal() +
  theme(legend.position = "none")

```



